                  ------
Binary Remoting and Authentication Protocol
                  ------

Binary Remoting and Authentication Protocol

  This is not the original version of BRAP hosted at http://brap.tornado.no/

  This is a fork of BRAP that uses Apache HttpClient instead of 
  HttpURLConnection.

  BRAP is a Java remoting protocol that uses native Java object serialization, encapsulated in HTTP.

  It aims to be a lightweight alternative to
  {{{http://static.springsource.org/spring/docs/2.5.x/reference/remoting.html#remoting-httpinvoker}Spring HttpInvoker}}
  and {{{http://static.springsource.org/spring-security/site/}Spring Security}}
  especially when you don't need or want the dependencies of Spring in your client, for example when
  building a rich client application where size might be an issue.

  BRAP supports {{{remoting-with-streams.html}remoting with streams}} to send and recieve large payloads, and you
  can easily add progress indicators and cancel/resume behaviour to such transfers.

  The authentication mechanism lets you use your own domain objects as credentials.

  BRAP gives you "pass by reference" even though the object arguments are serialized and passed to
  the remote service - changes that happen on the remote side can be applied to the client side automatically.

  Server configuration can be expressed solely in web.xml or by subclassing the ProxyServlet but
  there is also an optional SpringProxyServlet available for seamless Spring Integration.

  BRAP focuses on being easy to use, small in size, yet powerful and extensible.

* Accessing a remote service is simple:

+--
HttpClient client = new DefaultHttpClient();
MyService myService = ServiceProxyFactory.createProxy(MyService.class, client,"http://example.com/MyService");
+--

* Servlet configuration in web.xml:

+--
<servlet>
  <servlet-name>hello</servlet-name>
  <servlet-class>no.tornado.brap.servlet.ProxyServlet</servlet-class>
  <init-param>
    <param-name>service</param-name>
    <param-value>com.example.HelloServiceImpl</param-value>
  </init-param>
  <init-param>
    <param-name>authorizationProvider</param-name>
    <param-value>no.tornado.brap.auth.AuthenticationNotRequiredAuthorizer</param-value>
  </init-param>
</servlet>

<servlet-mapping>
  <servlet-name>hello</servlet-name>
    <url-pattern>/HelloService</url-pattern>
</servlet-mapping>
+--

  Don't let the simplicity fool you - BRAP supports powerful customization and Spring integration for maximum flexibility!

  Read the {{{documentation.html}short and concise documentation}}, the {{{/apidocs/index.html}apidocs}}
  or browse the {{{source.html}source code}}.

* Getting BRAP

  You can access all downloads including source code directly via HTTP
  from the {{{getting-brap.html}Downloads page}}.
