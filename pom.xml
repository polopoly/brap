<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>no.tornado.brap</groupId>
	<artifactId>brap-polopoly</artifactId>
	<packaging>pom</packaging>
	<version>1.1-SNAPSHOT</version>
	<url>https://github.com/polopoly/brap</url>
	<name>BRAP</name>
	<modules>
		<module>brap-common</module>
		<module>brap-client</module>
		<module>brap-server</module>
		<module>brap-modification</module>
		<module>brap-spring</module>
		<module>brap-examples</module>
		<module>brap-systemtest</module>
	</modules>
	<description>
		BRAP is a Java remoting protocol that uses native Java object serialization, encapsulated in HTTP.

		This is a fork of the original BRAP and it uses HttpClient instead of HttpURLConnection.

		It aims to be an alternative to Spring HttpInvoker and Spring Security
		especially when you don't need or want the dependencies of Spring in your client, for example when
		building a rich client application where size might be an issue.

		The authentication mechanism lets you use your own domain objects as credentials.

		Server configuration can be expressed solely in web.xml or by subclassing the ProxyServlet but
		there is also an optional SpringProxyServlet available for seamless Spring Integration.

		BRAP focuses on being easy to use, small in size, yet powerful and extensible.
	</description>
	<inceptionYear>2012</inceptionYear>
	<licenses>
		<license>
			<name>Apache License</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>
	<organization>
		<name>Atex</name>
		<url>http://www.atex.com/</url>
	</organization>

	<scm>
	    <connection>scm:git:git://github.com/polopoly/brap.git</connection>
	    <developerConnection>scm:git:git@github.com:polopoly/brap.git</developerConnection>
	</scm>

	<distributionManagement>
	    <repository>
	      <id>polopoly-product</id>
	      <name>Polopoly Product</name>
	      <url>http://maven.polopoly.com/nexus/content/repositories/polopoly-product</url>
	    </repository>

	    <snapshotRepository>
	      <id>polopoly-product-snapshots</id>
	      <name>Polopoly Product Snapshots</name>
	      <url>http://maven.polopoly.com/nexus/content/repositories/polopoly-product-snapshots</url>
	    </snapshotRepository>
	</distributionManagement>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<descriptors>
						<descriptor>src/assemble/all.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.1</version>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
		          <aggregate>true</aggregate>
		        </configuration>
			</plugin>
		</plugins>
	</reporting>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
</project>
